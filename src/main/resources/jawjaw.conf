#### 
#### Configuration of JAWJAW
#### 

# Specify the filename of the wordnet-ja put under a classpath root.
# (if you put it at ./src/main/resources/wnjpn-0.9.db, this param value is wnjpn-0.9.db)
#  
# We developed jawjaw (and a separate software ws4j) using 
# version 0.9 for testing. According to our WS4J benchmark, v0.9
# is up to 4 times faster than using v1.1, with much smaller DB size (about half).  

wordnet      = wnjpn.db

# Store recently used results on memory?
# Enabled when 1, disabled otherwise.

cache        = 1


# Number of results to store on memory, when cache is enabled.
# Increase this number is you have a large memory

maxCacheSize = 1000


# When memoryDB is 1, WordNet DB is loaded on memory 
#  - initialization speed: slow (10-30 sec)
#  - runtime speed: super fast
#  - additional memory requirement: large (~100+ MB)
#  
# When memoryDB is 0, WordNet DB stays on disk
#  - initialization speed: very fast even when WordNet DB is in jar (0-1 sec)
#  - runtime speed: fast (almost no difference from on-memory depending on application) 
#  - additional memory requirement: N/A

memoryDB     = 0


# pragma cache_size parameter in sqlite3
# 
# Query or change the suggested maximum number of database disk pages 
# that SQLite will hold in memory at once per open database file. 
# Whether or not this suggestion is honored is at the discretion of 
# the Application Defined Page Cache. The default page cache implemention that 
# is built into SQLite does honor the suggestion if it can, but alternative 
# page caches implementations set by the application at run-time may choose 
# to ignore this suggestion. The default suggested cache size is 2000.
# 
# When you change the cache size using the cache_size pragma, the change 
# only endures for the current session. The cache size reverts to the 
# default value when the database is closed and reopened. Use the 
# default_cache_size pragma to check the cache size permanently.

dbCacheSize  = 20000
