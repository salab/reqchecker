buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'io.franzbecker:gradle-lombok:1.8'
    }
}

apply plugin: 'java'
apply plugin: 'io.franzbecker.gradle-lombok'

compileJava {
    options.encoding = 'UTF-8'
}

repositories {
    jcenter()
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'com.google.guava:guava:21.0'
    compile 'de.sciss:jawjaw:0.1.0'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.slf4j:slf4j-api:1.7.21'

    compileOnly 'org.projectlombok:lombok:1.16.12'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.6.2'
}

jar {
    manifest {
        attributes 'Main-Class': 'jp.ac.titech.cs.se.reqchecker.Main'
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

// delombok
import io.franzbecker.gradle.lombok.task.DelombokTask
task delombok(type: DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file("$buildDir/src-delombok")
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
}

javadoc {
    dependsOn delombok
    source = delombok.outputDir
    failOnError = false
}
